{"version":3,"file":"index-bl5VB9ys.js","sources":["../../src/components/EntryList/index.tsx"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { MarkdownContext, ThemeContext } from \"context\";\nimport { getReadableTime, exportMarkdown } from \"utils\";\nimport \"components/EntryList/styles.css\";\n\ninterface Entry {\n    filename: string;\n    markdown: string;\n    timestamp: Date;\n}\n\ninterface GroupedEntry {\n    entryName: string;\n    entries: Entry[];\n}\n\nconst EntryList = ({ closeList }: { closeList: () => void }) => {\n    const [selectedEntries, setSelectedEntries] = useState<Entry[]>([]);\n    const [groupedEntries, setGroupedEntries] = useState<GroupedEntry[]>([]);\n    const { handleChange, filenameChange, timestampChange } =\n        useContext(MarkdownContext)!;\n    const { theme } = useContext(ThemeContext)!;\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const storedEntries = Object.entries(localStorage)\n            .filter(([key]) => key.startsWith(\"Entry: \"))\n            .map(([key, value]: [key: string, value: string]) => ({\n                filename: key.replace(\"Entry: \", \"\").split(\" :~~: \")[0],\n                markdown: value,\n                timestamp: new Date(\n                    key.replace(\"Entry: \", \"\").split(\" :~~: \")[1]\n                ),\n            }));\n\n        const groupedEntries = Object.values(\n            storedEntries.reduce((acc, { filename, markdown, timestamp }) => {\n                if (!acc[filename]) acc[filename] = [];\n                acc[filename].push({ filename, markdown, timestamp });\n                return acc;\n            }, {} as Record<string, Entry[]>)\n        ).map((entries) => {\n            entries.sort(\n                (a, b) => b.timestamp.getTime() - a.timestamp.getTime()\n            );\n            return {\n                entryName: entries[0].filename,\n                entries,\n            };\n        });\n\n        groupedEntries.sort(\n            (a, b) =>\n                b.entries[0].timestamp.getTime() -\n                a.entries[0].timestamp.getTime()\n        );\n\n        setGroupedEntries(groupedEntries);\n    }, [closeList]);\n\n    const handleEntryClick = (entry: Entry) => {\n        setSelectedEntries((prevSelectedEntries) => {\n            if (prevSelectedEntries.includes(entry)) {\n                return prevSelectedEntries.filter((e) => e !== entry);\n            } else {\n                return prevSelectedEntries.length < 2\n                    ? [...prevSelectedEntries, entry]\n                    : prevSelectedEntries;\n            }\n        });\n    };\n\n    const previewEntries = () => {\n        if (selectedEntries.length !== 2) return;\n        const entry1 = `${selectedEntries[0].filename}@${getReadableTime(\n            selectedEntries[0].timestamp\n        )}`;\n        const entry2 = `${selectedEntries[1].filename}@${getReadableTime(\n            selectedEntries[1].timestamp\n        )}`;\n\n        navigate(`/mdwrite/previews/p1/${entry1}/p2/${entry2}`);\n    };\n\n    const openEntry = (entry: Entry) => {\n        filenameChange(entry.filename);\n        handleChange(entry.markdown);\n        timestampChange(entry.timestamp);\n        closeList();\n    };\n\n    const deleteEntry = (target: Entry) => {\n        const { timeZone } = Intl.DateTimeFormat().resolvedOptions();\n        const formattedDate = target.timestamp.toLocaleString(\"en-US\", {\n            timeZone,\n        });\n        localStorage.removeItem(\n            `Entry: ${target.filename} :~~: ${formattedDate}`\n        );\n\n        const newEntries = groupedEntries.map((entry) => {\n            if (entry.entryName === target.filename) {\n                return {\n                    ...entry,\n                    entries: entry.entries.filter(\n                        (detail) => detail.timestamp !== target.timestamp\n                    ),\n                };\n            }\n            return entry;\n        });\n\n        setGroupedEntries(newEntries);\n    };\n\n    return (\n        <div className={`entry-list ${theme}`}>\n            <h2 className={`entry-list-heading ${theme}`}>Saved Entries</h2>\n            <div className=\"header-button-container\">\n                <button\n                    key=\"New Entry\"\n                    className={`entry-button ${theme}`}\n                    title=\"Open a new entry in the editor\"\n                    onClick={() =>\n                        openEntry({\n                            filename: \"untitled\",\n                            markdown: \"\",\n                            timestamp: new Date(),\n                        })\n                    }\n                >\n                    New Entry\n                </button>\n                <button\n                    key=\"Preview\"\n                    className={`entry-button ${theme}`}\n                    title=\"Mark two entries to open a preview\"\n                    onClick={previewEntries}\n                >\n                    Preview\n                </button>\n            </div>\n            {groupedEntries.length == 0 ? (\n                <div className={`entry-title ${theme}`}>No entry</div>\n            ) : (\n                groupedEntries.map(\n                    (entry) =>\n                        entry.entries.length > 0 && (\n                            <div key={entry.entryName}>\n                                <div className={`entry-title ${theme}`}>\n                                    {entry.entryName.length > 50\n                                        ? entry.entryName.substring(0, 70) +\n                                          \"...\"\n                                        : entry.entryName}\n                                </div>\n                                {entry.entries.map((entry) => (\n                                    <div\n                                        className=\"entry\"\n                                        key={entry.timestamp.toString()}\n                                    >\n                                        <br />\n                                        <label\n                                            title=\"Check to preview\"\n                                            className={`checkbox-container ${theme}`}\n                                        >\n                                            <input\n                                                type=\"checkbox\"\n                                                name=\"myCheckbox\"\n                                                checked={selectedEntries.includes(\n                                                    entry\n                                                )}\n                                                onChange={() =>\n                                                    handleEntryClick(entry)\n                                                }\n                                            />\n                                            <span\n                                                className={`checkbox-checkmark ${theme}`}\n                                            ></span>\n                                        </label>\n                                        <button\n                                            title={`${\n                                                entry.filename\n                                            } from ${entry.timestamp.toDateString()}`}\n                                            className={`entry-button ${theme}`}\n                                            onClick={() => openEntry(entry)}\n                                        >\n                                            {getReadableTime(entry.timestamp)}{\" \"}\n                                        </button>\n                                        <Link\n                                            title=\"Open entry in new tab\"\n                                            to={\n                                                \"entry/\" +\n                                                entry.filename +\n                                                \"@\" +\n                                                getReadableTime(entry.timestamp)\n                                            }\n                                            target=\"_blank\"\n                                        >\n                                            <h3>[â†—]</h3>\n                                        </Link>\n                                        <button\n                                            title={`Export as ${entry.filename}.md`}\n                                            className={`export-button ${theme}`}\n                                            onClick={() =>\n                                                exportMarkdown({\n                                                    filename: entry.filename,\n                                                    markdown: entry.markdown,\n                                                })\n                                            }\n                                        >\n                                            Export\n                                        </button>\n                                        <button\n                                            title={`Export as ${entry.filename}.md`}\n                                            className={`export-button ${theme}`}\n                                            onClick={() =>\n                                                exportMarkdown({\n                                                    filename:\n                                                        entry.filename +\n                                                        \"@\" +\n                                                        getReadableTime(\n                                                            entry.timestamp\n                                                        ),\n                                                    markdown: entry.markdown,\n                                                })\n                                            }\n                                        >\n                                            @\n                                        </button>\n                                        <button\n                                            title={`Delete this version of ${entry.filename}`}\n                                            className=\"delete-button\"\n                                            onClick={() => deleteEntry(entry)}\n                                        >\n                                            Delete\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        )\n                )\n            )}\n        </div>\n    );\n};\n\nexport default EntryList;\n"],"names":["EntryList","closeList","selectedEntries","setSelectedEntries","useState","groupedEntries","setGroupedEntries","handleChange","filenameChange","timestampChange","useContext","MarkdownContext","theme","ThemeContext","navigate","useNavigate","useEffect","storedEntries","key","value","acc","filename","markdown","timestamp","entries","a","b","handleEntryClick","entry","prevSelectedEntries","e","previewEntries","entry1","getReadableTime","entry2","openEntry","deleteEntry","target","timeZone","formattedDate","newEntries","detail","jsxs","jsx","Link","exportMarkdown"],"mappings":"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"}