{"version":3,"mappings":"+HAEA,MAAMA,EAASC,EAAA,KAAK,IAAMC,EAAA,WAAO,qBAAmB,EAAC,iCAC/CC,EAAYF,EAAA,KAAK,IAAMC,EAAA,WAAO,qBAAsB,EAAC,iCACrDE,EAAUH,EAAA,KAAK,IAAMC,EAAA,WAAO,qBAAoB,eAAC,+BAKjDG,EAAO,CAAC,CAAE,YAAAC,KAA4C,CACxD,KAAM,CAACC,EAAoBC,CAAqB,EAAIC,WAAS,EAAI,EAC3D,CAACC,EAAeC,CAAgB,EAAIF,WAAS,EAAK,EAClD,CAACG,EAAiBC,CAAkB,EAAIJ,WAAS,EAAI,EACrDK,EAAYC,SAA8B,IAAI,EAC9CC,EAAaD,SAA8B,IAAI,EAC/C,CAAE,MAAAE,CAAA,EAAUC,EAAA,WAAWC,CAAY,EAEzCC,YAAU,IAAM,CACRd,GAAaE,EAAsB,EAAK,EAE5C,MAAMa,EAAe,IAAM,CACNV,EAAA,OAAO,WAAa,GAAG,GAErC,+BAAiB,SAAUU,CAAY,EACjCA,IAEN,IAAM,OAAO,oBAAoB,SAAUA,CAAY,GAC/D,CAACf,CAAW,CAAC,EAEhB,MAAMgB,EAAuB,IACzBd,EAAsB,CAACD,CAAkB,EAEvCgB,EAAmB,IAAM,CAC3B,MAAMC,EAASV,EAAU,QACnBW,EAAUT,EAAW,QACvB,IAACQ,GAAU,CAACC,EAAS,QAETb,EAAkBa,EAAUD,GACpC,eAAe,EAAI,EAC3BX,EAAmB,CAACD,CAAe,GAInC,OAAAc,EAAA,KAAC,MAAI,WAAU,OACV,UACGhB,GAAAiB,EAAA,IAAC,UACG,MACI,sBAAwBf,EAClB,UACA,SAEV,UAAW,uBAAuBK,CAAK,GACvC,QAASM,EAER,WAAkB,IAAM,IAC7B,EAEHhB,GACGoB,MAACxB,EAAU,WAAWmB,CAAsB,SAE/C,MAAI,WAAW,kBAAkBL,CAAK,GAAI,IAAKH,EAC5C,SAAAa,EAAA,IAAC3B,EAAA,CACG,qBAAAsB,EACA,cAAef,CAAA,GAEvB,EACAoB,MAAC,MAAI,WAAW,gBAAgBV,CAAK,GAAI,IAAKD,EAC1C,SAACW,MAAAvB,EAAA,EAAQ,CACb,EACJ,GAER","names":["Editor","lazy","__vitePreload","EntryList","Preview","Main","toCloseList","isEntryListVisible","setIsEntryListVisible","useState","isSmallScreen","setIsSmallScreen","isEditorVisible","setIsEditorVisible","editorRef","useRef","previewRef","theme","useContext","ThemeContext","useEffect","handleResize","toggleListVisibility","toggleVisibility","editor","preview","jsxs","jsx"],"sources":["../../src/components/Main/index.tsx"],"sourcesContent":["import { useState, useEffect, useRef, useContext, lazy } from \"react\";\n\nconst Editor = lazy(() => import(\"components/Editor\"));\nconst EntryList = lazy(() => import(\"components/EntryList\"));\nconst Preview = lazy(() => import(\"components/Preview\"));\n\nimport { ThemeContext } from \"context\";\nimport \"components/Main/styles.css\";\n\nconst Main = ({ toCloseList }: { toCloseList: boolean }) => {\n    const [isEntryListVisible, setIsEntryListVisible] = useState(true);\n    const [isSmallScreen, setIsSmallScreen] = useState(false);\n    const [isEditorVisible, setIsEditorVisible] = useState(true);\n    const editorRef = useRef<HTMLDivElement | null>(null);\n    const previewRef = useRef<HTMLDivElement | null>(null);\n    const { theme } = useContext(ThemeContext)!;\n\n    useEffect(() => {\n        if (toCloseList) setIsEntryListVisible(false);\n\n        const handleResize = () => {\n            setIsSmallScreen(window.innerWidth < 768);\n        };\n        window.addEventListener(\"resize\", handleResize);\n        handleResize(); // Initial check\n\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, [toCloseList]);\n\n    const toggleListVisibility = () =>\n        setIsEntryListVisible(!isEntryListVisible);\n\n    const toggleVisibility = () => {\n        const editor = editorRef.current;\n        const preview = previewRef.current;\n        if (!editor || !preview) return;\n\n        const element = isEditorVisible ? preview : editor;\n        element.scrollIntoView(true);\n        setIsEditorVisible(!isEditorVisible);\n    };\n\n    return (\n        <div className=\"main\">\n            {isSmallScreen && (\n                <button\n                    title={\n                        \"Click to scroll to \" + isEditorVisible\n                            ? \"preview\"\n                            : \"editor\"\n                    }\n                    className={`floating-button btn ${theme}`}\n                    onClick={toggleVisibility}\n                >\n                    {isEditorVisible ? \"↓\" : \"↑\"}\n                </button>\n            )}\n            {isEntryListVisible && (\n                <EntryList closeList={toggleListVisibility} />\n            )}\n            <div className={`editor-sidebar ${theme}`} ref={editorRef}>\n                <Editor\n                    toggleListVisibility={toggleListVisibility}\n                    isListVisible={isEntryListVisible}\n                />\n            </div>\n            <div className={`preview-pane ${theme}`} ref={previewRef}>\n                <Preview />\n            </div>\n        </div>\n    );\n};\n\nexport default Main;\n"],"file":"assets/index-dZsZLlwX.js"}